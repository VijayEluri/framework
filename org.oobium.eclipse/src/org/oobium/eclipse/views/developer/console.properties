#-------------------------------------------------------------------------------
# Copyright (c) 2010 Oobium, Inc..
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#     Oobium, Inc. - initial API and implementation
#-------------------------------------------------------------------------------
command.add.description=Add:
command.add.module.description=Add the given module to the active module's configuration.
command.add.module.usage=add module <name>
command.add.nature.description=Add the given Nature to the active Project's .project file.
command.add.nature.usage=add nature <name>
command.add.repository.description=Add the given Bundle Repository to the Workspace.
command.add.repository.usage=add repository <folder>
command.browse.description=Open an external browser for the given URL
command.browse.usage=browse <url>
command.cat.description=Show the contents of the given file
command.cat.usage=cat <file_name>
command.cd.description=Change the present working directory (similar to the posix cd command)
command.cd.usage=cd <dir_name>
command.clean.description=Clean the contents of the bin directory in the active project (and generated, if a module)
command.clean.usage=clean (takes no arguments)
command.create.description=Create:
command.create.action_cache.description=Create a new ActionCache for a model or controller
command.create.action_cache.usage=create action_cache <model:model_name> [name:cache_name] [actions:action1,action2,...]]\n\
 the optional actions argument is a comma separated list with no spaces\n\
 actions: create, destroy, update, show, showAll, showEdit, showNew\n\
   leave out the actions argument to imply all actions
command.create.application.description=Create a new Application
command.create.application.usage=create application [-f] <name> [createViews:true/false]\n\
 flag -f - force (do not ask before overwriting)\n\
 createViews - add support for views (default is true; support can always be added later)
command.create.controller.description=Create a new Controller
command.create.controller.usage=create controller <name>
command.create.controller_for.description=Create a new Controller for the specified Model
command.create.controller_for.usage=create controller_for [-f] <model_name>\n  flag -f - force (do not ask before overwriting)
command.create.controller_tests.description=Create Tests for the given Controller or Model
command.create.controller_tests.usage=create controller_tests [-f] <controller_or_model_name>\n  flag -f - force (do not ask before overwriting)
command.create.mailer.description=Create a new Mailer
command.create.mailer.usage=create mailer <name> [methods:method1,method2,...]
command.create.mailer_template.description=Create a new Mailer Template for the specified Mailer
command.create.mailer_template.usage=create mailer_template <mailer:mailer_name> <name:template_name>
command.create.mailer_templates_for.description=Create Mailer Templates for the specified Mailer
command.create.mailer_templates_for.usage=create mailer_templates_for <mailer_name>
command.create.migration.description=Create a new Migration for the current Project
command.create.migration.usage=create migration <name>
command.create.migrator.description=Create a new Migrator project for the current Project
command.create.migrator.usage=create migration (takes no arguments)
command.create.model.description=Create a new Model
command.create.model.usage=create model [-fmvctr] <name> [attr1:type1 attr2:type2 ...]\n  \
                           flags: f - force (do not ask before overwriting)\n         \
                                  m - destroy the model (use this alone to create _only_ the model)\n         \
                                  v - create standard views for the model\n         \
                                  c - create controller for the model\n         \
                                  t - create test cases for the model and controller\n         \
                                  r - add standard route for the model\n         \
                             default: "-mvctr" if project is not a Webservice; "-mctr" if it is
command.create.module.description=Create a new Module project
command.create.module.usage=create module [-f] <name> [createViews:true/false]\n  \
                            flag -f - force (do not ask before overwriting)\n  \
                            createViews - add support for views (default is true; support can always be added later)
command.create.observer.description=Create a new Observer for the specified Model
command.create.observer.usage=create observer [-f] <model_name>\n flag -f - force (do not ask before overwriting)
command.create.schema.description=Create the Schema Migration for the active Module
command.create.schema.usage=create schema
command.create.test_suite.description=Create the TestSuite project for the active Module
command.create.test_suite.usage=create test_suite [-f]\n flag -f - force (do not ask before overwriting)
command.create.tests.description=Create all Tests for the active Module
command.create.tests.usage=create tests [-f]\n flag -f - force (do not ask before overwriting)
command.create.view.description=Create a new View
command.create.view.usage=create view <name> [html]
command.create.views_for.description=Create the standard Views for the specified Model
command.create.views_for.usage=create views_for [-f] <model_name>\n  flag -f - force (do not ask before overwriting)
command.create.webservice.description=Create a new Webservice project
command.create.webservice.usage=create webservice [-f] <name>\n  \
                                flag -f - force (do not ask before overwriting)
command.destroy.description=Destroy:
command.destroy.action_cache.description=Remove the specified Action Cache from the file system
command.destroy.action_cache.usage=destroy action_cache [-f] <name>\n  flags: f - force (do not ask)
command.destroy.application.description=Remove the active Application from the file system completely
command.destroy.application.usage=destroy application [-f] [app_name]\n  \
                                  flags: f - force (do not ask)\n  \
                                  if [bundle_name] is not specified, use the active Application
command.destroy.bundle.description=Remove the specified Bundle from the file system
command.destroy.bundle.usage=destroy bundle [-f] [bundle_name]\n  \
                             flags: f - force (do not ask)\n  \
                             if [bundle_name] is not specified, use the active project\n  \
                             Similar to "destroy module", but works on regular bundles and does not consider or touch migrations.
command.destroy.controller.description=Remove the specified Controller from the file system
command.destroy.controller.usage=destroy controller [-f] <name>\n  flags: f - force (do not ask)
command.destroy.controller_for.description=Remove the Controller for the specified Model from the file system
command.destroy.controller_for.usage=destroy controller_for [-f] <model_name>\n  flags: f - force (do not ask)
command.destroy.mailer.description=Remove the specified mailer from the, and its related templates, from system
command.destroy.mailer.usage=destroy mailer [-ftl] <name>\n  \
                             flags: f - force (do not ask)\n         \
                                    t - destroy templates for mailer (all templates and classes that are in the mailer's template folder)\n         \
                                    l - destroy layout for mailer\n    \
                               default: "-tl"
command.destroy.migration.description=Remove the Migration for the active Application from the file system completely
command.destroy.migration.usage=destroy migration [-f] (takes no arguments)\n\  flags: f - force (do not ask)
command.destroy.migrator.description=Remove the Migrator of the active Module from the file system completely
command.destroy.migrator.usage=destroy migrator [-f]\n  \
                               flags: f - force (do not ask)\n
command.destroy.model.description=Remove the specified Model, and related artifacts, from the file system
command.destroy.model.usage=destroy model [-fmvc] <name>\n  \
                            flags: f - force (do not ask)\n         \
                                   m - destroy model (use this alone to destroy _only_ the model)\n         \
                                   v - destroy views for model (all views, style sheets, scripts, etc. that are in the model's view folder)\n         \
                                   c - destroy controller for model\n    \
                              default: "-mvc"
command.destroy.module.description=Remove the specified Module from the file system completely
command.destroy.module.usage=destroy module [-f] [module_name]\n  \
                             flags: f - force (do not ask)\n  \
                             if [module_name] is not specified, use the active project (must be a Module)
command.destroy.observer.description=Remove the specified Observer from the file system
command.destroy.observer.usage=destroy observer [-f] <name>\n  flags: f - force (do not ask)
command.destroy.view.description=Remove the specified View from the file system
command.destroy.view.usage=destroy view [-f] <name>\n  flags: f - force (do not ask)
command.destroy.views_for.description=Remove the Views Folder for the specified Model, and all contents, from the file system
command.destroy.views_for.usage=destroy view_for [-f] <model_name>\n  flags: f - force (do not ask)
command.export.description=Export the active application
command.export.usage=export [-v] [mode:DEV|TEST|PROD] [migrators:true|false]\n         \
                     flags: -v verbose (print out extra info)\n         \
                     options: mode - which mode to use when exporting; default is DEV\n                  \
                              migrators - if "true" then migrators will also be exported; default is "false"
command.export.client.description=Export the active module to a client
command.export.client.usage=export client [target:module_name]\n         \
                      options: target - the target project to which this module will be exported
command.generate.description=Generate:
command.generate.application.description=Generate all dependencies for the active bundle
command.generate.application.usage=generate application [-cv]\n         -c clean the module before generating\n         -v verbose (print out extra info)
command.generate.asset_list.description=Generate the list of assets (assets.js) in the active module
command.generate.asset_list.usage=generate asset_list (takes no arguments)
command.generate.mailer.description=Generate super class for the specified Mailer
command.generate.mailer.usage=generate mailer <name>
command.generate.mailer_template.description=Generate the corresponding Java class for the specified mailer template (.emt file)
command.generate.mailer_template.usage=generate mailer_template <template_name>
command.generate.model.description=Generate super class for the specified Model
command.generate.model.usage=generate model <name>
command.generate.module.description=Generate all dependencies for the active bundle
command.generate.module.usage=generate module [-cv]\n         -c clean the module before generating\n         -v verbose (print out extra info)
command.generate.script.description=Generate the corresponding Java class for the specified script file (.ejs file)
command.generate.script.usage=generate script <name>
command.generate.style.description=Generate the corresponding Java class for the specified style sheet (.ess file)
command.generate.style.usage=generate style <name>
command.generate.view.description=Generate the corresponding Java class for the specified view (.esp file)
command.generate.view.usage=generate view <name>
command.get.description=Get the value of the given preference
command.get.usage=get <property_name>
command.http.description=Issue an HTTP request:
command.http.delete.description=Issue an HTTP DELETE request
command.http.delete.usage=http delete <url>
command.http.get.description=Issue an HTTP GET request
command.http.get.usage=http get <url>
command.http.post.description=Issue an HTTP POST request
command.http.post.usage=http post <url>
command.http.put.description=Issue an HTTP PUT request
command.http.put.usage=http put <url>
command.import.description=Import the given project into the Eclipse workspace
command.import.usage=import <project_name> (project_name must be in the present working directory)
command.ls.description=List the contents of the present working directory (similar to the posix ls command)
command.ls.usage=ls [dir_name]
command.migrate.description=Run the Migrator for the active application
command.migrate.usage=migrate [migrationName up|down]\n           \
                        if no migrationName is given, then run all migrations previously not run\n           \
                        otherwise, run the specific migration in the specified direction, whether or not is has been run
command.migrate.purge.description=Purge the database (completely remove it and all data)
command.migrate.purge.usage=migrate purge
command.migrate.redo.description=Redo migrations by rolling back then forward
command.migrate.redo.usage=migrate redo [step:#|all]\n           \
                             step indicates the number of migrations to rollback before migrating forward through the current one           \
                             "all" rollsback all previously run migrations and then migrate them all forward\n           \
                             default is step:1
command.migrate.rollback.description=Rollback previously run migrations
command.migrate.rollback.usage=migrate rollback [step:#|all]\n           \
                                 step indicates the number of migrations to rollback           \
                                 "all" rollsback all previously run migrations\n           \
                                 default is step:1
command.migrate.to.description=Run migrations forward or backward to the specified migration
command.migrate.to.usage=migrate to <name>
command.mkdir.description=Make the given directory in the present work directory (similar to the posix mkdir command)
command.mkdir.usage=mkdir <dir_name>
command.open.description=Open:
command.open.activator.description=Open the active project's Application file
command.open.activator.usage=open activator (takes no arguments)
command.open.configuration.description=Open the active project's Configuration file
command.open.configuration.usage=open configuration (takes no arguments) 
command.open.controller.description=Open the given Controller's source file
command.open.controller.usage=open controller <controller_name>
command.open.controller_for.description=Open the Controller source file for the given Model
command.open.controller_for.usage=open controller_for <model_name>
command.open.create_schema.description=Open the active application's Create Schema file (create.sql)
command.open.create_schema.usage=open create_schema (takes no arguments)
command.open.file.description=Open a File in an editor (Eclipse if present)
command.open.file.usage=open file <path/to/file>
command.open.layout.description=Open the Layout for the active Application
command.open.layout.usage=open layout
command.open.layout_for.description=Open the Layout file for the given Model
command.open.layout_for.usage=open layout_for <model_name>
command.open.mailer.description=Open the given Mailer's source file
command.open.mailer.usage=open mailer <name>
command.open.manifest.description=Open the active project's MANIFEST.MF file
command.open.manifest.usage=open manifest (takes no arguments)
command.open.migrator.description=Open the Migrator for the active Application
command.open.migrator.usage=open migrator
command.open.model.description=Open the given Model's source file
command.open.model.usage=open model <name>
command.open.observer.description=Open the Observer with the given name
command.open.observer.usage=open observer <name>           \
                            Observer names always end with "Observer", and will be added to <name> if omitted
command.open.route_tests.description=Open the RouteTests file for the active Application
command.open.route_tests.usage=open route_tests
command.open.schema.description=Open the Schema Migration file for the active Application
command.open.schema.usage=open schema
command.open.type.description=(Not Implemented) Open the given Java Type
command.open.type.usage=Not Implemented
command.open.view.description=Open the given View file (.esp)
command.open.view.usage=open view <view_name>
command.pwd.description=Show the Present Working Directory (similar to the posix pwd command)
command.pwd.usage=pwd (takes no arguments)
command.refresh.description=Refresh:
command.refresh.bundles.description=Refresh the list of bundles in the workspace
command.refresh.bundles.usage=refresh bundles (takes no arguments)
command.refresh.model.description=Refresh the given Model in Eclipse
command.refresh.model.usage=refresh model <model_name>
command.refresh.project.description=Refresh the active Project in Eclipse
command.refresh.project.usage=refresh project (takes no arguments)
command.refresh.view.description=Refresh the given view in Eclipse
command.refresh.view.usage=refresh view <view_name>
command.refresh.views.description=Refresh all views in Eclipse
command.refresh.views.usage=refresh views (takes no arguments)
command.remote.description=Remote:
command.remote.deploy.description=Deploy the current application
command.remote.deploy.usage=remote deploy [keep:#]\n           \
                              keep indicates the number of previous deployment to keep on the remote server (for rolling back)\n  \
                              default is keep:3\n           \
                              * this command requires a properly configured site.js file
command.remote.migrate.description=Run the migrator forward on the remote machine
command.remote.migrate.usage=migrate [migrationName up|down]\n           \
                             if no migrationName is given, then run all migrations previously not run\n           \
                             otherwise, run the specific migration in the specified direction, whether or not is has been run\n           \
                             * this command requires a properly configured site.js file
command.remote.migrate.purge.description=Purge the database (completely remove it and all data)
command.remote.migrate.purge.usage=migrate purge\n           \
                             * this command requires a properly configured site.js file
command.remote.migrate.redo.description=Redo migrations by rolling back then forward
command.remote.migrate.redo.usage=migrate redo [step:#|all]\n           \
                             step indicates the number of migrations to roll back before migrating forward through the current one\n           \
                             "all" rolls back all previously run migrations and then migrate them all forward\n           \
                             default is step:1\n           \
                             * this command requires a properly configured site.js file
command.remote.migrate.rollback.description=Rollback previously run migrations
command.remote.migrate.rollback.usage=migrate rollback [step:#|all]\n           \
                                 step indicates the number of migrations to roll back\n           \
                                 "all" rolls back all previously run migrations\n           \
                                 default is step:1\n           \
                             * this command requires a properly configured site.js file
command.remote.migrate.to.description=Run migrations forward or backward to the specified migration
command.remote.migrate.to.usage=migrate to <name>\n           \
                             * this command requires a properly configured site.js file
command.remote.redeploy.description=Redeploy the application, overwriting the current deployment
command.remote.redeploy.usage=remote redeploy (takes no arguments)\n           \
                              * this command requires a properly configured site.js file
command.remote.restart.description=Restart the application
command.remote.restart.usage=remote restart (takes no arguments)\n           \
                              * this command requires a properly configured site.js file
command.remote.rollback.description=Stops the current deployment and starts a previous one
command.remote.rollback.usage=remote rollback [step:#]\n           \
                              step indicates how many previous deployments to go back\n           \
                              default is the previous deployment - step:1\n           \
                              * this command requires a properly configured site.js file
command.remove.description=Remove:
command.remove.module.description=Remove the given module from the active module's configuration.
command.remove.module.usage=remove module <module_name>
command.remove.nature.description=Remove the given Nature from the active Project's .project file.
command.remove.nature.usage=remove nature <name>
command.remove.repository.description=Remove the given Bundle Repository from the Workspace.
command.remove.repository.usage=remove repository <folder>
command.rm.description=Remove / Delete a file or directory from the file system (similar to the posix rm command)
command.rm.usage=rm <path/to/file_or_dir>
command.set.description=Set:
command.set.application.description=Set the active application
command.set.application.usage=set application <application_name>
command.set.bundle.description=Set the active bundle (aka project)
command.set.bundle.usage=set bundle <bundle_name>
command.set.preference.description=Set a configuration preference
command.set.preference.usage=set preference <key>=<value>
command.set.prompt.description=Set the prompt used by this console
command.set.prompt.usage=set prompt <new_prompt>
command.set.repositories.description=Set the Workspace repositories to the given comma separated list of Bundle Repositories.
command.set.repositories.usage=set repositories <comma separated list of folders>
command.show.description=Show:
command.show.bundles.description=Show a list of all Bundles used by the active project
command.show.bundles.usage=show bundles (takes no arguments)
command.show.configuration.description=Show the configuration of the active project
command.show.configuration.usage=show configuration (takes no arguments)
command.show.controllers.description=Show a list of Controllers in the active project (if it is a module)
command.show.controllers.usage=show controllers (takes no arguments)
command.show.mailers.description=Show a list of Mailers in the active project (if it is a module)
command.show.mailers.usage=show mailers (takes no arguments)
command.show.manifest.description=Show the MANIFEST.MF file for the active project
command.show.manifest.usage=show manifest (takes no arguments)
command.show.migrations.description=Show a list of Migrations for the active application
command.show.migrations.usage=show migrations (takes no arguments)
command.show.models.description=Show a list of Models in the active project
command.show.models.usage=show models (takes no arguments)
command.show.modules.description=Show a list of all Modules used by the active project (if it is a module)
command.show.modules.usage=show modules (takes no arguments)
command.show.natures.description=Show a list of the active project's Natures
command.show.natures.usage=show natures (takes no arguments)
command.show.preferences.description=Show the current preferences
command.show.preferences.usage=show preferences (takes no arguments)
command.show.test_suites.description=Show a list of Test Suites for the active application
command.show.test_suites.usage=show test_suites (takes no arguments)
command.show.version.description=Show the Version of the given Bundle, or the active Bundle if none is given
command.show.version.usage=show version [bundle]\n           \
                            * uses the active Bundle if [bundle] is not provided
command.show.views.description=Show a list of Views in the active project (if it is a module)
command.show.views.usage=show views (takes no arguments)
command.show.workspace.workspace.description=
command.show.workspace.applications.description=Show a list of all Applications in the workspace
command.show.workspace.applications.usage=show workspace applications (takes no arguments)
command.show.workspace.bundles.description=Show a list of all Bundles in the workspace
command.show.workspace.bundles.usage=show workspace bundles (takes no arguments)
command.show.workspace.modules.description=Show a list of all Modules in the workspace
command.show.workspace.modules.usage=show workspace modules (takes no arguments)
command.start.description=Start (Run) the active project
command.start.usage=start (takes no arguments)
command.stop.description=Stop the active project, if it is running
command.stop.usage=stop (takes no arguments)
command.touch.description=Update the access and modification time of the given file
command.touch.usage=touch <path/to/file>\n  files that don't exist will be created empty (like the 'touch' command on *nix)</p>
